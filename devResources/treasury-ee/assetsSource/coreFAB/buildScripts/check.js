/*============================================================================*\
	DO NOT EDIT THIS FILE. THIS IS A CORE FILE.
/*============================================================================*/

module.exports = function(grunt) {
	// Set grunt config for check
	grunt.fabInitConfig.http = {
		check: {
			options: {
				url: 'https://api.github.com/repos/tjdraper/buzzing-pixel-fabricator/releases/latest',
				headers: {
					'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36'
				},
				callback: function(error, response, body) {
					// Parse body into JSON
					var obj = JSON.parse(body);

					// Get the version from the JSON
					var latestVer = obj.tag_name;
					var latestVerSplit = latestVer.split('.');

					// Get the current version
					var currentVer = grunt.fabPackage.version;
					var currentVerSplit = currentVer.split('.');

					// Set response function for up to date
					var upToDate = function() {
						grunt.log.ok('You are running the latest version of Fabricator');
						grunt.log.ok('Fabricator version: ' + currentVer);
					};

					// Set response function for needs update
					var outOfDate = function() {
						grunt.log.error('You need to update to the latest version');
						grunt.log.error('You are currently running Fabricator version: ' + currentVer);
						grunt.log.error('The latest version is: ' + latestVer);
						grunt.log.error('Run "grunt update" to update to the lateset version');
					};

					// Set the latest version download
					grunt.latestZipballUrl = obj.zipball_url;

					// Check if the version matches
					if (currentVer === latestVer) {
						upToDate();

						return;
					}

					// Check major number
					if (latestVerSplit[0] > currentVerSplit[0]) {
						outOfDate();

						return;
					}

					// Check minor version
					if (
						latestVerSplit[0] >= currentVerSplit[0] &&
						latestVerSplit[1] > currentVerSplit[1]
					) {
						outOfDate();

						return;
					}

					// Check patch version
					if (
						latestVerSplit[0] >= currentVerSplit[0] &&
						latestVerSplit[1] >= currentVerSplit[1] &&
						latestVerSplit[2] >= currentVerSplit[2]
					) {
						outOfDate();

						return;
					}

					upToDate();
				}
			}
		}
	};
};
