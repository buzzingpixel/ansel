/*============================================================================*\
	DO NOT EDIT THIS FILE. THIS IS A CORE FILE.
/*============================================================================*/

.fab-typography () when (@typographyEnabled = true) {
	.heading () {
		.color(@headingColor);
		.font-family(@headingFont);
		.font-weight(@headingFontWeight);
		.line-height(@headingLineHeight);
		.spaced(@headingMarginBottom);
		small {
			.font-weight(normal);
		}
	}
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		.heading();
	}
	.h1 () {
		.font-size(@h1);
		.heading();
	}
	h1 {
		.h1();
	}
	.h2 () {
		.font-size(@h2);
		.heading();
	}
	h2 {
		.h2();
	}
	.h3 () {
		.font-size(@h3);
		.heading();
	}
	h3 {
		.h3();
	}
	.h4 () {
		.font-size(@h4);
		.heading();
	}
	h4 {
		.h4();
	}
	.h5 () {
		.font-size(@h5);
		.heading();
	}
	h5 {
		.h5();
	}
	.h6 () {
		.font-size(@h6);
		.heading();
	}
	h6 {
		.h6();
	}
	p {
		.color(@paragraphColor);
		.font-weight(@paragraphFontWeight);
		.line-height(@paragraphLineHeight);
		.spaced(@paragraphMarginBottom);
	}
	small {
		.font-size(@smallFontSize);
	}
	dfn,
	em,
	i,
	var {
		.italic();
	}
	blockquote,
	q {
		.color(@quoteColor);
		.font(@quoteFont; @quoteFontSize; @quoteFontWeight; @quoteLineHeight; @quoteFontStyle);
		cite {
			.color(@citeColor);
			.font(@citeFont; @citeFontSize; @citeFontWeight; @citeLineHeight; @citeFontStyle);
			.margin(top; @citeMarginTop);
			&:before {
				.content(@citeIndicator);
			}
		}
		p {
			.color(@quoteColor);
		}
	}
	.blockquote () {
		.padding(@quotePaddingVertical; @quotePaddingHorizontal);
		.spaced();
		cite {
			.block();
		}
	}
	blockquote {
		.blockquote();
	}
	del,
	s,
	strike {
		.text-decoration(line-through);
	}
	a {
		.color(@linkColor);
		.text-decoration(@linkDecoration);
		&:focus {
			.outline(none);
		}
		&:hover {
			.color(@linkColorHover);
			.check () when not (@linkDecorationHover = false) {
				text-decoration: @linkDecorationHover;
			}
			.check();
		}
		&:active {
			.color(@linkColorActive);
		}
		img {
			.border(0);
		}
	}
	.hr () {
		.block();
		.border(0);
		.border(top; @ruleColor; @ruleHeight; @ruleStyle);
		.height(1px);
		.margin(vertical; @ruleMargin);
	}
	hr {
		.hr();
	}
	address {
		.color(@addressColor);
		.font(@addressFont; @addressFontSize; @addressFontWeight; @addressLineHeight; @addressFontStyle);
		.spaced();
	}
}
